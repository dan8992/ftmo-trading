apiVersion: apps/v1
kind: Deployment
metadata:
  name: technical-pattern-service
  namespace: dax-trading
  labels:
    app: technical-pattern-service
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: technical-pattern-service
  template:
    metadata:
      labels:
        app: technical-pattern-service
        version: v1
    spec:
      containers:
      - name: technical-pattern-service
        image: ghcr.io/dan8992/technical-pattern-service:latest
        imagePullPolicy: Always
        env:
        - name: POSTGRES_HOST
          value: "postgres-service"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB
          value: "finrl_dax"
        - name: POSTGRES_USER
          value: "finrl_user"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 30
          periodSeconds: 60
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 10
          periodSeconds: 30
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: technical-pattern-service-service
  namespace: dax-trading
  labels:
    app: technical-pattern-service
spec:
  selector:
    app: technical-pattern-service
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP