apiVersion: apps/v1
kind: Deployment
metadata:
  name: dax-llm-service
  namespace: dax-trading
  labels:
    app: dax-llm-service
    tier: ai-inference
  annotations:
    # Enterprise deployment pattern for air-gapped environments
    deployment.kubernetes.io/revision: "2"
    dax-trading.com/model-strategy: "persistent-volume-offline"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dax-llm-service
  template:
    metadata:
      labels:
        app: dax-llm-service
        tier: ai-inference
      annotations:
        # Force pod recreation when PVC changes
        dax-trading.com/model-volume-version: "v1"
    spec:
      containers:
      - name: dax-llm-inference
        image: ghcr.io/dan8992/dax-llm-service:latest
        ports:
        - containerPort: 8000
          name: api-port
        env:
        # Enterprise environment configuration
        - name: MODEL_NAME
          value: ProsusAI/finbert  # Use the model the code expects
        - name: TRANSFORMERS_CACHE
          value: /tmp/transformers_cache
        - name: HF_HOME
          value: /tmp/hf_cache
        - name: HF_HUB_DISABLE_TELEMETRY
          value: "1"  # Disable telemetry for faster loading
        - name: GPU_MEMORY_UTILIZATION
          value: "0.9"
        - name: MAX_MODEL_LEN
          value: "4096"
        - name: TENSOR_PARALLEL_SIZE
          value: "2"
        # Enterprise security and performance
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: PYTORCH_JIT
          value: "1"
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: "2"
            memory: 4Gi
        # Enterprise-grade health checks with model loading considerations
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 180  # Extended for model loading
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5  # More tolerant for heavy model operations
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 90   # Extended for model loading
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: dax-llm-service-service
  namespace: dax-trading
  labels:
    app: dax-llm-service
spec:
  selector:
    app: dax-llm-service
  ports:
  - name: api
    port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP